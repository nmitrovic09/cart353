/* 
 Prototype
 Nikola Mitrovic
 March 7th, 2017
 
 Description: The starting point was to create a landscape generated by
 sea data to have a working base before the interaction is
 programmed with the Leap Motion. In the mean time, I was
 researching how does nature, humans, interaction and computation
 interconnected and influence each other. I was trying to understand
 relationship and connection between human and nature to find
 a proper meaning to the interaction involved in my project. Next step is
 to focus on the interaction to be user friendly in a way to convey
 the message that I want to see.
 
 I also uncommented the sound and video because on github you cannot
 upload more than 50mb so you will only see the sound and video code in
 the main tab and landscape tab.
 */

//imported libraries
import ddf.minim.*;
import ddf.minim.analysis.*;
import ddf.minim.effects.*;
import ddf.minim.signals.*;
import ddf.minim.spi.*;
import ddf.minim.ugens.*;

import de.voidplus.leapmotion.*;
import processing.video.*;
import java.util.*;

//visual, sound and video variables
Landscape land;
Minim m;
AudioPlayer p;
Movie movie;
LeapMotion leap;
Interaction i;

void setup() {
  //set display
  background(0);
  //fullScreen(P3D);
  size(640,360,P3D);
  //hide mouse
  noCursor();

  //sound instantiation
  //m = new Minim(this);
  //p = m.loadFile("sound.mp3");
  //p.loop();

  //video instantiation
  //movie = new Movie(this, "water.mov");
  //movie.loop();

  //landscape instantiation
  land = new Landscape();

  //leap instantiation
  leap = new LeapMotion(this);
  
  i = new Interaction();
}

// ======================================================
// 1. Callbacks

void leapOnInit() {
  // println("Leap Motion Init");
}
void leapOnConnect() {
  // println("Leap Motion Connect");
}
void leapOnFrame() {
  // println("Leap Motion Frame");
}
void leapOnDisconnect() {
  // println("Leap Motion Disconnect");
}
void leapOnExit() {
  // println("Leap Motion Exit");
}

void draw() {
  background(0);

  //Here I have to say which one to control the landscape with the interaction or seaData

  //display and update the landscape
  i.display();
  i.update();

  //video display horizontal
  //display();
  
  i.run();
}

//display the movie on the landscape
void display() {
  image(movie, 0, 0);
}

//read the movie video
void movieEvent(Movie movie) {
  movie.read();
}